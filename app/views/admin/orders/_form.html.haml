.row
  .col-sm-4
    = form_for(@order, url: @order.persisted? ? admin_order_path(@order) : admin_orders_path , remote: @order.persisted?, data: { autoupdate: @order.persisted? }) do |f|
      = render 'shared/error_messages', object: f.object
      %ul.list-group
        %li.list-group-item= field_for f, :name
        %li.list-group-item= field_for f, :phone, :phone_field
        %li.list-group-item= select_field_for f, :user_id, User.all.map{ |u| [u.form_display, u.id] }
        %li.list-group-item= select_field_for f, :state, Order::STATES.map{ |s| [t("orders.states.#{s}"), s] }
        %li.list-group-item= select_field_for f, :payment_type,  Order.delivery_types
        %li.list-group-item= select_field_for f, :delivery_type, Order.payment_types
        %li.list-group-item= field_for f, :delivery_cost
        %li.list-group-item= field_for f, :address, :text_area, rows: 8
      .form-actions
        - if @order.new_record?
          = f.submit 'Создать заказ', class: 'btn btn-success'
  .col-sm-4
    %pre.comment= comment
    = form_for(@order, url: @order.persisted? ? admin_order_path(@order) : admin_orders_path) do |f|
      = field_for f, :add_comment, :text_area, rows: 8
      .form-actions
        = f.submit 'Отправить', class: 'btn btn-success'
  .col-sm-4
    = form_for(@order, url: @order.persisted? ? admin_order_path(@order) : admin_orders_path) do |f|
      = f.text_field :admin_order_product, class: 'form-control'
      %small Артикул товара
      .form-actions
        = f.submit 'Добавить товар', class: 'btn btn-success'
    %br/
    = form_for(@order, url: @order.persisted? ? admin_order_path(@order) : admin_orders_path) do |f|
      =# render @order.line_items.includes(:product, :order), f: f
      = f.fields_for :line_items do |li|
        = render 'line_items_attributes', li: li
      .form-actions
        = f.submit 'Обновить', class: 'btn btn-success'
